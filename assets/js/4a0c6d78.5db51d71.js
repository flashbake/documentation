"use strict";(self.webpackChunkflashbake_doc=self.webpackChunkflashbake_doc||[]).push([[436],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),k=p(n),c=a,h=k["".concat(s,".").concat(c)]||k[c]||d[c]||l;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=k;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},4076:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return d}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),i=["components"],o={},s="Flashbake Registry",p={unversionedId:"flashbake-registry",id:"flashbake-registry",title:"Flashbake Registry",description:"Once you have set up your flashbake endpoint, you must register it on-chain.",source:"@site/docs/flashbake-registry.md",sourceDirName:".",slug:"/flashbake-registry",permalink:"/docs/flashbake-registry",draft:!1,editUrl:"https://github.com/flashbake/documentation/docs/flashbake-registry.md",tags:[],version:"current",frontMatter:{},sidebar:"flashbakeSidebar",previous:{title:"Flashbake Endpoint",permalink:"/docs/flashbake-endpoint"},next:{title:"Run your own Relay",permalink:"/docs/flashbake-relay"}},u={},d=[{value:"How to register as a flashbaker on Mainnet",id:"how-to-register-as-a-flashbaker-on-mainnet",level:2},{value:"How to register as a flashbaker on Ghostnet",id:"how-to-register-as-a-flashbaker-on-ghostnet",level:2},{value:"Multi-sig setup",id:"multi-sig-setup",level:2}],k={toc:d};function c(e){var t=e.components,n=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},k,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"flashbake-registry"},"Flashbake Registry"),(0,l.kt)("p",null,"Once you have set up your flashbake endpoint, you must register it on-chain."),(0,l.kt)("p",null,"The Flashbake Registry is an on-chain table associating bakers with their Flashbake endpoint URL."),(0,l.kt)("p",null,"Any baker can register as a flashbaker by submitting their Flashbake endpoint URL to the contract storage."),(0,l.kt)("p",null,"To prevent spam, the flashbaker is required to deposit Tez into the contract in order to have their address registered."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Chain"),(0,l.kt)("th",{parentName:"tr",align:null},"Contract Address"),(0,l.kt)("th",{parentName:"tr",align:null},"Deposit Amount"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Mainnet"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://tzkt.io/KT1PQ21pYv12aUg6tHYvM9rwekYMXUtYGo2a/storage/240377"},(0,l.kt)("inlineCode",{parentName:"a"},"KT1PQ21pYv12aUg6tHYvM9rwekYMXUtYGo2a"))),(0,l.kt)("td",{parentName:"tr",align:null},"10 tez")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Ghostnet"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://ghostnet.tzkt.io/KT1CWuYkWxZMSq8kA12Kt5NpFGjSRac1Dc4r/storage/156204"},(0,l.kt)("inlineCode",{parentName:"a"},"KT1CWuYkWxZMSq8kA12Kt5NpFGjSRac1Dc4r"))),(0,l.kt)("td",{parentName:"tr",align:null},"1 test tez")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/flashbake/registry-contract"},"read the registry contract source code"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://better-call.dev/mainnet/KT1PQ21pYv12aUg6tHYvM9rwekYMXUtYGo2a/operations"},"explore the registry contract on BCD explorer"))),(0,l.kt)("h2",{id:"how-to-register-as-a-flashbaker-on-mainnet"},"How to register as a flashbaker on Mainnet"),(0,l.kt)("p",null,"To register as a flashbaker, issue the following command:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"tezos-client \\\n  --endpoint https://mainnet.smartpy.io \\\n  transfer 10 from <YOUR BAKER ADDRESS> to KT1PQ21pYv12aUg6tHYvM9rwekYMXUtYGo2a \\\n  --entrypoint 'register' \\\n  --arg '\"<YOUR FLASHBAKE_ENDPOINT_URL>\"'\n  --burn-cap 0.037\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"<YOUR_FLASHBAKE_ENDPOINT_URL>")," should be the Flashbake endpoint relay listener URL. It is typically ",(0,l.kt)("inlineCode",{parentName:"p"},"https://<address>:<port>/flashbake/bundle"),", where the relay listener of your Flashbake endpoint is publicly accessible on ",(0,l.kt)("inlineCode",{parentName:"p"},"<address>:<port>"),"."),(0,l.kt)("p",null,"To unregister and get your bond back:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"tezos-client \\\n  --endpoint https://mainnet.smartpy.io \\\n  transfer 0 from <YOUR BAKER ADDRESS> to KT1PQ21pYv12aUg6tHYvM9rwekYMXUtYGo2a \\\n  --entrypoint 'unregister'\n")),(0,l.kt)("p",null,"To update your flashbake endpoint address, you must unregister then re-register."),(0,l.kt)("h2",{id:"how-to-register-as-a-flashbaker-on-ghostnet"},"How to register as a flashbaker on Ghostnet"),(0,l.kt)("p",null,"Follow same instructions than above, but:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"--endpoint")," should be ",(0,l.kt)("inlineCode",{parentName:"li"},"--endpoint https://rpc.ghostnet.teztnets.xyz")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transfer")," recipient should be ",(0,l.kt)("inlineCode",{parentName:"li"},"to KT1CWuYkWxZMSq8kA12Kt5NpFGjSRac1Dc4r")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transfer 1")," to the register bond instead of 10.")),(0,l.kt)("h2",{id:"multi-sig-setup"},"Multi-sig setup"),(0,l.kt)("p",null,"The registry contract on Ghostnet is controlled by a multi-signature. The only action allowed by the multi-signature setup is to change the bond amount required. This multi-signature can also be upgraded to another set of accounts, or revoked altogether to make the registry immutable and trustless."),(0,l.kt)("p",null,"The current set of participants to the multi-signature setup are:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null}),(0,l.kt)("th",{parentName:"tr",align:null},"Ghostnet signer address"),(0,l.kt)("th",{parentName:"tr",align:null},"Mainnet signer address"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Daniel Feygin"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tz1ZVJuBNjehw9zH1fiWGNNwJbFW8EcjHd5U")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tz1TwT1geA5evgxcDDkQupzBNR2Xd23ggkRv"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Nicolas Ochem"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tz1Yyuh8uPKoQdMr2UxxQFwmmXfqGNGpxr3q")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tz1eTAkgFRhAct6LEMkFbfhmZKWuw7AYV2y3"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Keefer Taylor"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tz1YhBQGs44StJTvzFUTubA6NaLUcnsDv4N5")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tz1Vgr8svbAeMbmnC5tJxnB6WsB4h2iT6Mit"))))))}c.isMDXComponent=!0}}]);